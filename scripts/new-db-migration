#!/usr/bin/env bash

set -Eeuo pipefail

if [ $# -eq 0 ]; then
    echo "No argument provided"
    exit 1
fi

migrations_path="./migrations"
mkdir -p "${migrations_path}"

num_migrations=$(find "${migrations_path}" -maxdepth 1 -type f -name "*.sql" | wc -l)

migration_path="${migrations_path}/V$(($num_migrations + 1))__$(echo "$@" | sed 's/[^a-zA-Z0-9._-]/_/g').sql"
changelog_path="${migration_path}.yml"
target_db_path="${migration_path}.target.db"
reference_db_path="${migration_path}.reference.db"

rm -f "$target_db_path" "$reference_db_path" "$changelog_path"

echo "Set up reference database from schema"
cat schema.sql | sqlite3 "$reference_db_path"
echo "Set up target database by running all migrations"
cat <(echo "") $(find "${migrations_path}" -maxdepth 1 -type f -name "*.sql" | sort) | sqlite3 "$target_db_path"
echo "Calculate diff and create changelog"
liquibase diffChangeLog --url="jdbc:sqlite:${target_db_path}" --referenceUrl="jdbc:sqlite:${reference_db_path}" --changelogFile="${changelog_path}"

echo "Generate sql migration from changelog"
liquibase updateSQL --url="offline:sqlite" --outputFile="${migration_path}" --changelogFile="${changelog_path}"
sed -i -e '/^--/d' -e '/./,$!d' "${migration_path}"

echo
cat "$changelog_path"

rm "$target_db_path" "$reference_db_path" "$changelog_path"

echo "Migration written to: ${migration_path}"
