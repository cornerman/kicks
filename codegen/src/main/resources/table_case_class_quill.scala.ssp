package kicks.db.${schema.scalaName}

import io.getquill.*

#for (enum <- schema.enums)
type ${enum.scalaName} = ${enum.values.map(v => s"\"" + v.name + "\"").mkString(" | ")}
#end

#for (table <- schema.tables)

case class ${table.rowBase.scalaName}(
  #for (column <- table.rowBase.columns)
  column.scalaName: column.scalaType,
  #end
)
object ${table.rowBase.scalaName} {
  inline def query = querySchema[Person](
    "${table.name}",
    #for (column <- table.rowBase.columns)
    _.${column.scalaName} -> "${column.name}",
    #end
  )
}

#end

